import java.util.*;

public class Queue {
    public static final int MAX = 5;
    int[] queue = new int[MAX];
    int front = -1;
    int rear = -1;

    // Enqueue
    public void enqueue(int data) {
        if (rear == MAX - 1) {
            System.out.println("Queue Overflow");
            return;
        }
        if (front == -1) front = 0;
        rear++;
        queue[rear] = data;
        System.out.println("Inserted: " + data);
    }

    // Dequeue
    public void dequeue() {
        if (front == -1 || front > rear) {
            System.out.println("Queue Underflow");
            return;
        }
        System.out.println("Deleted: " + queue[front]);
        front++;
    }

    // Display
    public void display() {
        if (front == -1 || front > rear) {
            System.out.println("Queue is empty");
            return;
        }
        for (int i = front; i <= rear; i++) {
            System.out.print(queue[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Queue q = new Queue();
        Scanner sc = new Scanner(System.in); // Scanner object

        System.out.print("Enter number of elements to insert: ");
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            System.out.print("Enter value: ");
            int val = sc.nextInt();
            q.enqueue(val);
        }

        q.display();
        System.out.println("How many elements do you want to delete? ");
        int del = sc.nextInt();
        
        if(del==0) {
            System.out.println("You did not delete any elements");
            System.out.println("Elements are: ");
            for(int i=0;i<del;i++) {
            
            q.display();
            }
        }
        else {
            for(int i=0;i<del;i++) {
            System.out.println("Deleting one element...");
        q.dequeue();
        q.display();
        }
        }
        for(int i=0;i<del;i++) {
            System.out.println("Deleting one element...");
        q.dequeue();
        q.display();
        }

        sc.close();
    }
}
